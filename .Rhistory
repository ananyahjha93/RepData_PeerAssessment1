install.packages("RGtk2")
install.packages("RGtk2", type="source")
q()
library("rattle")
rattle()
install.packages("RGtk2", type="source")
rattle()
install.packages("RGtk2", dependencies=TRUE)
install.packages("RGtk2", type="source", dependencies = TRUE)
install.packages("rattle", repos="http://rattle.togaware.com", type="source")
install.packages("rattle", repos = "http://rattle.togaware.com",
install.packages("rattle", repos="http://rattle.togaware.com", type="source")
library("rattle")
rattle()
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
crv$rattleUI <- "rattle_macosx.ui"
rattle()
install.packages("RGtk2", type="source")
install.packages("RGtk2")
install.packages("RGtk2")
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
install.packages("RGtk2", depen=T)
install.packages("RGtk2", type="source")
install.packages("RGtk2", type="source")
library("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("ggplot2")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xml")
install.packages("XML")
install.packages("XML", repos="http://cran.r-project.org")
install.packages("xlsx", repos="http://cran.r-project.org")
install.packages("data.table", repos="http://cran.r-project.org")
y <- data.table(x = rnorm(9), y = rep(c(1, 2, 3), each = 3))
y = data.table(x = rnorm(9), y = rep(c(1, 2, 3), each = 3))
library(data.table)
y <- data.table(x = rnorm(9), y = rep(c(1, 2, 3), each = 3))
y
install.packages("rattle", repos="http://cran.r-project.org")
install.packages("rattle", repos="http://cran.r-project.org")
install.packages("rattle", repos="http://cran.r-project.org")
install.packages("xlsx2", repos="http://cran.r-project.org")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./house.csv", method = "curl")
df <- read.csv("house.csv")
library(data.table)
dt <- data.table(df[,df$VAL])
df$VAL
df <- fread("house.csv")
typeof(df)
df <- data.table(df)
typeof(df)
df[,table(VAL)]
tables(df)
tables()
rm(df)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "nat.xlsx", method = "curl")
library("xlsx")
dat <- read.xlsx("nat.xlsx", sheetIndex = 1, colIndex = 7:15, rowIndex = 18:23)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile = "rest.xml", method = "curl")
library("XML")
df <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal = TRUE)
df <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal = TRUE)
library("XML")
doc <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
doc <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal = TRUE)
doc <- xmlTreeParse("rest.xml", useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[2]]
rootNode[[1]][[1]][[2]]
xpathSApply(rootNode, "//zipcode", xmlValue)
zip <- xpathSApply(rootNode, "//zipcode", xmlValue)
zip == 21231
zip <- (zip == 21231)
zip
sum(zip)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "idaho.csv", method = "curl")
DT <- fread("idaho.csv")
tables()
DT[,mean(pwgtp15),by=SEX]
library(data.table)
library(datasets)
with(airquality, plot(Wind, Ozone))
example(points)
with(airquality, plot(Wind, Ozone, type = "l"))
with(airquality, plot(Wind, Ozone))
lines(airquality$Wind, airquality$Ozone)
with(airquality, plot(Wind, Ozone, type = "l", col = "red"))
install.packages("kernlab")
install.packages("rattle")
data <- fread("household_power_consumption.txt", sep = ";", header = TRUE)
data <- fread("household_power_consumption.txt", sep = ";", header = TRUE, na.String = "?")
data <- fread("household_power_consumption.txt", na.String = "?")
data <- fread("household_power_consumption.txt", na.String = "NA")
data <- fread("household_power_consumption.txt", list(as.Date(Date), strptime(Time)))
summary(data)
data <- data[,as.Date(Date)]
head(data)
data <- fread("household_power_consumption.txt")
data <- fread("household_power_consumption.txt", colClasses = c("date", "time", rep("numeric", 7)))
head(data)
head(data, nrow = 20)
head(data, nrows = 20)
data <- fread("household_power_consumption.txt", colClasses = c("date", "time", rep("numeric", 7)))
library("data.table")
data <- fread("household_power_consumption.txt", colClasses = c("date", "time", rep("numeric", 7)))
head(data)
data <- fread("household_power_consumption.txt", na.String = "?")
data <- fread("household_power_consumption.txt", na.strings = "?")
head(data)
head(data, nrows = 30)
data[1:30,]
data[100:130,]
data[150:220,]
data <- data[,Date := as.Date(Date)]
data <- fread("household_power_consumption.txt", colCLasses = c("date", "time", rep("character", 7)), na.strings = "?")
data <- read.csv("household_power_consumption.txt", sep = ";", header = TRUE)
data <- read.csv("household_power_consumption.txt", sep = ";", header = TRUE, colClasses = rep("character", 9))
data <- data[,as.Date(date)]
data <- data[,as.Date(Date)]
data[,Date] <- data[,as.Date(Date)]
data[,Time] <- data[,strptime(Time)]
names(data)
data[,"Time"] <- data[,strptime("Time")]
data[,"Date"] <- data[,as.Date("Date")]
clear
clear()
rm(data)
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)))
head(data)
is.NA(data$Sub_metering_3)
is.na(data$Sub_metering_3)
data[6841,]
data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
data[, 2] <- strptime(data[,2], format = "%H:%M:%S")
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)), nrows = 6)
data
data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
data
data[, 2] <- as>POSIXct(data[,2], format = "%H:%M:%S")
data[, 2] <- strptime(data[,2], format = "%H:%M:%S")
data
time <- "15:43:43"
time <- strptime(time, format = "%H:%M:%S")
time
time <- "15:43:00"
time <- strptime(time, format = "%H:%M:%S")
time
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)), nrows = 6)
data$Time
strptime(data$Time, format = "%H:%M:%S")
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)), nrows = 6)
data$Time <- strptime(data$Time, format = "%H:%M:%S")
data
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)))
data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
data$Time <- strptime(data$Time, format = "%H:%M:%S")
set <- as.Date(c("2007-02-01", "2007-02-02"))
set
data <- data[data$Date %in% set,]
data
hist(data$Global_active_power)
hist(data$Global_active_power, col = "red")
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (killowatts)")
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
lines(data$Global_active_power, weekdays(data$Date))
lines(data$Global_active_power, weekdays(data$Date), na.rm = TRUE)
with(data, plot(data$Global_active_power, weekdays(data$Date)))
data <- complete.cases(data)
data <- data[complete.cases(data),]
data[,3:9] <- data[complete.cases(data[,3:9]),]
data <- data[complete.cases(data[,9]),]
data <- data[complete.cases(data[,3:9]),]
data <- data[complete.cases(data[,3]),]
data <- data[complete.cases(data[,3:4]),]
data <- data[complete.cases(data[,4]),]
data <- data[complete.cases(data[,5]),]
data <- data[complete.cases(data[,6]),]
data <- data[complete.cases(data[,7]),]
data <- data[complete.cases(data[,8]),]
data <- data[complete.cases(data[,9]),]
lines(data$Global_active_power, weekdays(data$Date))
with(data, plot(data$Global_active_power, weekdays(data$Date)))
data$Date
data
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)))
data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
data$Time <- strptime(data$Time, format = "%H:%M:%S")
set <- as.Date(c("2007-02-01", "2007-02-02"))
data <- data[data$Date %in% set,]
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
weekdays(data$Date)
unique(weekdays(data$Date))
with(data, plot(data$Global_active_power, Date))
with(data, plot(Date ,data$Global_active_power))
with(data, plot(Time ,data$Global_active_power))
lines(Time, data$Global_active_power)
lines(Time, data$Global_active_power)
with(data, plot(Date ,data$Global_active_power), lty = 1)
with(data, plot(Time ,data$Global_active_power), lty =1 )
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)))
set <- c("2007-02-01", "2007-02-02")
data <- data[data$Date %in% set,]
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)))
data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
set <- as.Date(c("2007-02-01", "2007-02-02"))
data <- data[data$Date %in% set,]
set
data$Time
dates <- c("2007-02-01", "2007-02-02")
gl(2, 5, labels = c("a", "b"))
c <- ("a", "b", "c", "d", "e", "f", "g", "h", "i", "j")
c <- ("a", "b", "c", "d", "e", "f", "g", "h", "i", "j")
char <- c("a", "b", "c", "d", "e", "f", "g", "h", "i", "j")
paste(gl(2, 5, labels = c("a", "b")), char)
dates <- gl(2, 1440, labels = c("2007-02-01", "2007-02-02"))
dates
data[,2] <- paste(dates, Data$Time)
data[,2] <- paste(dates, data$Time)
data$Time <- strptime(data$Time, format = "%y-%m-%d %H:%M:%S")
head(data)
dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")
times <- c("23:03:20", "22:29:56", "01:03:30", "18:21:03", "16:56:26")
x <- paste(dates, times)
strptime(x, "%m/%d/%y %H:%M:%S")
dates <- gl(2, 1440, labels = c("2007/02/01", "2007/02/02"))
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)))
data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
set <- as.Date(c("2007-02-01", "2007-02-02"))
data <- data[data$Date %in% set,]
dates <- gl(2, 1440, labels = c("2007/02/01", "2007/02/02"))
data[,2] <- paste(dates, Data$Time)
data[,2] <- paste(dates, data$Time)
data$Time <- strptime(data$Time, format = "%y/%m/%d %H:%M:%S")
head(data)
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)))
data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
set <- as.Date(c("2007-02-01", "2007-02-02"))
data <- data[data$Date %in% set,]
dates <- gl(2, 1440, labels = c("2007/02/01", "2007/02/02"))
data[,2] <- paste(dates, data$Time)
data$Time
x
data$Time <- strptime(data$Time, format = "%Y/%m/%d %H:%M:%S")
head(data)
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
with(data, plot(weekdays(data$Date), data$Global_active_power))
weekdays(data$Date)
with(data, plot(unique(weekdays(data$Date)), data$Global_active_power))
data$Global_active_power
with(data, plot(Time ,data$Global_active_power))
lines(Time, data$Global_active_power)
lines(data$Time, data$Global_active_power)
with(data, plot(Time ,data$Global_active_power, type = "l"))
with(data, plot(Time ,data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
with(data, {plot(Time, Sub_metering_1, type = "l", col = "black")
plot(Time, Sub_metering_1, type = "l", col = "red")
plot(Time, Sub_metering_1, type = "l", col = "blue")
})
with(data, {plot(Time, Sub_metering_1, type = "l", col = "black")
plot(Time, Sub_metering_2, type = "l", col = "red")
plot(Time, Sub_metering_3, type = "l", col = "blue")
})
with(data, {plot(Time, Sub_metering_1, type = "l", col = "black");
plot(Time, Sub_metering_2, type = "l", col = "red");
plot(Time, Sub_metering_3, type = "l", col = "blue")
})
with(data, {plot(Time, Sub_metering_1, type = "l", col = "black")})
with(data, {plot(Time, Sub_metering_2, type = "l", col = "red")})
with(data, {plot(Time, Sub_metering_1, type = "l", col = "black");
plot(Time, Sub_metering_2, type = "l", col = "red");
plot(Time, Sub_metering_3, type = "l", col = "blue")
})
with(data, {plot(Time, Sub_metering_2, type = "l", col = "red")})
with(data, {plot(Time, Sub_metering_1, type = "l", col = "black");
plot(Time, Sub_metering_2, type = "l", col = "red");
plot(Time, Sub_metering_3, type = "l", col = "blue")
})
with(data, {plot(Time, Sub_metering_3, type = "l", col = "red")})
with(data, {plot(Time, Sub_metering_1, type = "l", col = "red")})
with(data, {plot(Time, Sub_metering_1, type = "l", col = "black")})
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
annotate(ylab = "Energy Sub Metering")
with(data, plot(Time, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy Sub Metering"))
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", type = "l", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1)
with(data, plot(Time ,data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
with(data, plot(Time ,data$Global_active_power, type = "l", xlab = "",ylab = "Global Active Power (kilowatts)")) ## plot2
with(data, plot(Time, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy Sub Metering"))
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1)
temp <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = "Date")[,1]
par(mfrow = c(2, 2))
with(data, plot(Time ,data$Global_active_power, type = "l", xlab = "",ylab = "Global Active Power (kilowatts)"))
with(data, plot(Time ,data$Voltage, type = "l", xlab = "",ylab = "Global Active Power (kilowatts)"))
with(data, plot(Time, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy Sub Metering"))
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, border = NULL)
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, border = "transparent")
with(data, plot(Time ,data$Global_reactive_power, type = "l", xlab = "",ylab = "Global Active Power (kilowatts)"))
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
par(mfrow = c(1, 1))
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
par(mfrow = c(2, 2))
with(data, plot(Time ,data$Global_active_power, type = "l", xlab = "",ylab = "Global Active Power"))
with(data, plot(Time ,data$Voltage, type = "l", xlab = "datetime",ylab = "Voltage"))
with(data, plot(Time, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy Sub Metering"))
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, bty = "n")
with(data, plot(Time ,data$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power"))
par(mfrow = c(2, 2))
with(data, plot(Time ,data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power"))
with(data, plot(Time ,data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage"))
with(data, plot(Time, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy Sub Metering"))
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, bty = "n")
with(data, plot(Time ,data$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power"))
with(data, plot(Time, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy Sub Metering"))
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1)
par(mfrow = c(1, 1))
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
par(mfrow = c(1, 1))
with(data, plot(Time ,data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)"))
par(mfrow = c(1, 1))
with(data, plot(Time, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy Sub Metering"))
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1)
par(mfrow = c(2, 2))
with(data, plot(Time ,data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power"))
with(data, plot(Time ,data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage"))
with(data, plot(Time, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy Sub Metering"))
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, bty = "n")
with(data, plot(Time ,data$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power"))
## Read data from file, replace "?" with NA
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)))
## convert 1st column to Date class using as.Date
data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
## select rows from table according to the dates required by questions
## ie 2007-02-01 and 2007-02-02
set <- as.Date(c("2007-02-01", "2007-02-02"))
data <- data[data$Date %in% set,]
## attach date to the Time column, so that it does not take the current
## date when we use strptime
dates <- gl(2, 1440, labels = c("2007/02/01", "2007/02/02"))
data[,2] <- paste(dates, data$Time)
## convert character string into Time class
data$Time <- strptime(data$Time, format = "%Y/%m/%d %H:%M:%S")
## open png file
png(filename = "plot4.png", width = 480, height = 480, units = "px")
## set  a 2x2 grid
par(mfrow = c(2, 2))
## 1st plot
with(data, plot(Time ,data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power"))
## 2nd plot
with(data, plot(Time ,data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage"))
## 3rd plot
with(data, plot(Time, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy sub metering"))
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, bty = "n") ## bty = "n" removes the legend boundary
## 4th plot
with(data, plot(Time ,data$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power"))
## close file
dev.off()
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?", colClasses = c(rep("character", 2), rep("numeric", 7)))
data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
set <- as.Date(c("2007-02-01", "2007-02-02"))
data <- data[data$Date %in% set,]
dates <- gl(2, 1440, labels = c("2007/02/01", "2007/02/02"))
data[,2] <- paste(dates, data$Time)
data$Time <- strptime(data$Time, format = "%Y/%m/%d %H:%M:%S")
par(mfrow = c(1, 1))
with(data, plot(Time, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy Sub Metering"))
lines(data$Time, data$Sub_metering_2, type = "l", col = "red")
lines(data$Time, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1)
library("plot3.R")
source("plot3.R")
par(mfrow = c(1, 1))
with(data, plot(Time ,data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)"))
source("plot2.R")
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
source("plot1.R")
install.packages("slidify")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("markdown")
install.packages("slidify")
install.packages("xtable")
setwd("./datascience")
data <- read.csv("activity.csv")
data[,2] <- as.Date(data[,2])
temp <- split(data, data$date)
x <- NULL
for(i in seq_along(temp)) {
x[i] <- sum(temp[[i]]$steps, na.rm = TRUE)
}
hist(x)
mean(x)
median(x)
minsplit <- data
holiday <- c("Saturday", "Sunday")
minsplit["day"] <- NULL
minsplit$day <- weekdays(minsplit$date, abbreviate = FALSE)
holiday <- c("Saturday", "Sunday")
weekend <- minsplit[minsplit$day %in% holiday,]
weekday <- minsplit[!(minsplit$day %in% weekend),]
weekend <- split(weekend, weekend$interval)
weekday <- split(weekday, weekday$interval)
avg <- NULL
for(i in seq_along(weekend)) {
avg[i] <- mean(weekend[[i]]$steps, na.rm = TRUE)
}
weekend <- data.frame(interval = unique(data$interval), avg = avg)
weekend["day.type"] <- c(rep("weekend", length(weekend$interval)))
for(i in seq_along(weekday)) {
avg[i] <- mean(weekday[[i]]$steps, na.rm = TRUE)
}
weekday <- data.frame(interval = unique(data$interval), avg = avg)
weekday["day.type"] <- c(rep("weekday", length(weekday$interval)))
rbind(weekday, weekend)
minsplit <- rbind(weekend, weekday)
xyplot(avg ~ interval | day.type, data = minsplit, layout = c(1, 2), type = "l")
library(lattice)
xyplot(avg ~ interval | day.type, data = minsplit, layout = c(1, 2), type = "l")
xyplot(avg ~ interval | day.type, data = minsplit, layout = c(1, 2), type = "l", xlab = "Number of steps", ylab = "Interval")
xyplot(avg ~ interval | day.type, data = minsplit, layout = c(1, 2), type = "l", xlab = "Interval", ylab = "Number of steps")
